[gd_resource type="VisualShader" load_steps=24 format=3 uid="uid://d8qy4jn630ck"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_owls1"]
default_input_values = [0, 0.5, 1, 0.0, 2, 0.0]
op_type = 0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_1lewl"]
parameter_name = "Scanline_Scroll_Speed"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_tdf1q"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7xjln"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_6f82x"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_1aqes"]
parameter_name = "Scanline_Color"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_qqof3"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
expanded_output_ports = [0]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_sr2iq"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_hqa78"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_idqiq"]
parameter_name = "Scanline_Scale"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_rfuvb"]
parameter_name = "Scanline_Texture"
texture_type = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_qcyxk"]
operator = 2

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_3ruxk"]
expanded_output_ports = [0]
varying_name = "WorldPos"
varying_type = 4

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_jjbvg"]
source = 5

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_jxtvp"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_akjgv"]
parameter_name = "Fresnel_Power"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_hxhxn"]
output_port_for_preview = 0
parameter_name = "Fresnel_Color"
default_value_enabled = true
default_value = Color(0, 0, 1, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_rdadk"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
expanded_output_ports = [0]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_raud6"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_vojbj"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_sd8ll"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_y0ccy"]
input_name = "model_matrix"

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_ibofu"]
varying_name = "WorldPos"
varying_type = 4

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;


// Varyings
varying vec3 WorldPos;

uniform vec4 Scanline_Color : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform float Scanline_Scroll_Speed = 1;
uniform float Scanline_Scale = 1;
uniform sampler2D Scanline_Texture : source_color;
uniform float Fresnel_Power = 1;
uniform vec4 Fresnel_Color : source_color = vec4(0.000000, 0.000000, 1.000000, 1.000000);



void vertex() {
// Input:4
	mat4 n_out4p0 = MODEL_MATRIX;


// Input:2
	vec3 n_out2p0 = VERTEX;


// TransformVectorMult:3
	vec3 n_out3p0 = (n_out4p0 * vec4(n_out2p0, 1.0)).xyz;


// VaryingSetter:5
	WorldPos = n_out3p0;


}

void fragment() {
// ColorParameter:15
	vec4 n_out15p0 = Scanline_Color;


// FloatParameter:11
	float n_out11p0 = Scanline_Scroll_Speed;


// Input:13
	float n_out13p0 = TIME;


// FloatOp:12
	float n_out12p0 = n_out11p0 * n_out13p0;


// FloatParameter:19
	float n_out19p0 = Scanline_Scale;


// VaryingGetter:21
	vec3 n_out21p0 = WorldPos;


// VectorDecompose:9
	float n_out9p0 = n_out21p0.x;
	float n_out9p1 = n_out21p0.y;
	float n_out9p2 = n_out21p0.z;


// FloatOp:20
	float n_out20p0 = n_out19p0 * n_out9p1;


// FloatOp:14
	float n_out14p0 = n_out12p0 + n_out20p0;


// VectorCompose:10
	float n_in10p0 = 0.50000;
	vec2 n_out10p0 = vec2(n_in10p0, n_out14p0);


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Scanline_Texture, n_out10p0);


// VectorOp:16
	vec4 n_out16p0 = n_out15p0 * n_out3p0;
	float n_out16p4 = n_out16p0.a;


// FloatParameter:5
	float n_out5p0 = Fresnel_Power;


// Fresnel:4
	float n_out4p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_out5p0);


// ColorParameter:6
	vec4 n_out6p0 = Fresnel_Color;


// VectorOp:7
	vec4 n_out7p0 = vec4(n_out4p0) * n_out6p0;
	float n_out7p4 = n_out7p0.a;


// FloatOp:18
	float n_out18p0 = n_out16p4 + n_out7p4;


// VectorOp:17
	vec4 n_out17p0 = n_out16p0 + n_out7p0;


// Output:0
	ALPHA = n_out18p0;
	EMISSION = vec3(n_out17p0.xyz);


}
"
varyings/WorldPos = "0,4"
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_vojbj")
nodes/vertex/2/position = Vector2(-400, 440)
nodes/vertex/3/node = SubResource("VisualShaderNodeTransformVecMult_sd8ll")
nodes/vertex/3/position = Vector2(36.2231, 310.005)
nodes/vertex/4/node = SubResource("VisualShaderNodeInput_y0ccy")
nodes/vertex/4/position = Vector2(-340, 280)
nodes/vertex/5/node = SubResource("VisualShaderNodeVaryingSetter_ibofu")
nodes/vertex/5/position = Vector2(400, 440)
nodes/vertex/connections = PackedInt32Array(2, 0, 3, 1, 4, 0, 3, 0, 3, 0, 5, 0)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_rfuvb")
nodes/fragment/2/position = Vector2(-960, 240)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_jjbvg")
nodes/fragment/3/position = Vector2(-320, 200)
nodes/fragment/4/node = SubResource("VisualShaderNodeFresnel_jxtvp")
nodes/fragment/4/position = Vector2(-520, 600)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_akjgv")
nodes/fragment/5/position = Vector2(-920, 620)
nodes/fragment/6/node = SubResource("VisualShaderNodeColorParameter_hxhxn")
nodes/fragment/6/position = Vector2(-600, 780)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorOp_rdadk")
nodes/fragment/7/position = Vector2(-180, 640)
nodes/fragment/9/node = SubResource("VisualShaderNodeVectorDecompose_raud6")
nodes/fragment/9/position = Vector2(-1260, 200)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorCompose_owls1")
nodes/fragment/10/position = Vector2(-580, 60)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatParameter_1lewl")
nodes/fragment/11/position = Vector2(-1400, -380)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatOp_tdf1q")
nodes/fragment/12/position = Vector2(-1060, -300)
nodes/fragment/13/node = SubResource("VisualShaderNodeInput_7xjln")
nodes/fragment/13/position = Vector2(-1400, -160)
nodes/fragment/14/node = SubResource("VisualShaderNodeFloatOp_6f82x")
nodes/fragment/14/position = Vector2(-760, 20)
nodes/fragment/15/node = SubResource("VisualShaderNodeColorParameter_1aqes")
nodes/fragment/15/position = Vector2(-640, -220)
nodes/fragment/16/node = SubResource("VisualShaderNodeVectorOp_qqof3")
nodes/fragment/16/position = Vector2(-100, 40)
nodes/fragment/17/node = SubResource("VisualShaderNodeVectorOp_sr2iq")
nodes/fragment/17/position = Vector2(140, 360)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatOp_hqa78")
nodes/fragment/18/position = Vector2(140, 160)
nodes/fragment/19/node = SubResource("VisualShaderNodeFloatParameter_idqiq")
nodes/fragment/19/position = Vector2(-1360, -40)
nodes/fragment/20/node = SubResource("VisualShaderNodeFloatOp_qcyxk")
nodes/fragment/20/position = Vector2(-989.157, 66.0368)
nodes/fragment/21/node = SubResource("VisualShaderNodeVaryingGetter_3ruxk")
nodes/fragment/21/position = Vector2(-1500, 240)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 5, 0, 4, 3, 6, 0, 7, 1, 4, 0, 7, 0, 11, 0, 12, 0, 13, 0, 12, 1, 12, 0, 14, 0, 14, 0, 10, 1, 15, 0, 16, 0, 3, 0, 16, 1, 16, 0, 17, 0, 7, 0, 17, 1, 17, 0, 0, 5, 16, 4, 18, 0, 7, 4, 18, 1, 18, 0, 0, 1, 19, 0, 20, 0, 20, 0, 14, 1, 21, 0, 9, 0, 10, 0, 3, 0, 9, 1, 20, 1)
