[gd_resource type="VisualShader" load_steps=35 format=3 uid="uid://c416qb40v5ily"]

[ext_resource type="Script" path="res://Scripts/CustomNodes/VoronoiNode.gd" id="1_rphlp"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_33ghu"]
function = 31

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_he1l2"]
input_name = "uv"

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_ayno4"]
default_input_values = [1, 0.0, 2, 1.0]
initialized = true
script = ExtResource("1_rphlp")

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_g0eym"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_pqsu3"]
default_input_values = [0, 0.0, 1, 0.02]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_nj6ke"]
parameter_name = "Water_Color"
default_value_enabled = true
default_value = Color(0, 0.294118, 1, 0.776471)

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_2ab4n"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
expanded_output_ports = [0]
op_type = 5

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_ootf4"]
parameter_name = "Dark_Foam_Color"
default_value_enabled = true
default_value = Color(0, 0, 0.709804, 0.870588)

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_ty0g2"]
default_input_values = [1, 0.0, 2, 1.0]
initialized = true
script = ExtResource("1_rphlp")

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_sa1lp"]
parameter_name = "Foam_Offset"
default_value_enabled = true
default_value = Vector2(0.1, 0.1)

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_jea4d"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_o30m1"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
expanded_output_ports = [0]
op_type = 5

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_rnp30"]
parameter_name = "Light_Foam_Color"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_x7tx3"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_gapuh"]
function = 31

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_3prmg"]
parameter_name = "Flow_Map"
color_default = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_w8gy7"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_lhjpq"]
parameter_name = "Flow_Map_Tiling"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_l3vdc"]
function = 1

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_p1dtg"]
parameter_name = "Flow_Strength"
default_value_enabled = true
default_value = 0.05

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_dnrdv"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_mo7j6"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_2anej"]
parameter_name = "Flow_Map_Speed"
default_value_enabled = true
default_value = 0.005

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_igdgp"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_t4od6"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_sb2vc"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_3lrbu"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_6axhy"]
op_type = 0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_u0no7"]
parameter_name = "Cell_Density"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_6c7w0"]
parameter_name = "Foam_Thickness"
default_value_enabled = true
default_value = 0.05

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_qfkii"]
input_name = "model_matrix"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_1cwp1"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_2ytjw"]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform vec4 Water_Color : source_color = vec4(0.000000, 0.294118, 1.000000, 0.776471);
uniform vec4 Dark_Foam_Color : source_color = vec4(0.000000, 0.000000, 0.709804, 0.870588);
uniform float Foam_Thickness = 0.05000000074506;
uniform float Flow_Strength = 0.05000000074506;
uniform float Flow_Map_Tiling;
uniform float Flow_Map_Speed = 0.00499999988824;
uniform sampler2D Flow_Map : hint_default_black;
uniform float Cell_Density = 1;
uniform vec4 Light_Foam_Color : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform vec2 Foam_Offset = vec2(0.100000, 0.100000);


// Voronoi
vec2 randomVector(ivec2 cell)
	{
		/*
		mat2 m;
		m[0] = vec2(15.27, 47.63);
		m[1] = vec2(99.41, 89.98);
		
		vec2 t = fract(cos(vec2(cell) * m) * 46839.32);
		return vec2(sin(t.y + offset) * 0.5 + 0.5, cos(t.x + offset) * 0.5 + 0.5);
		*/
		
		vec2 seed = vec2(cell);
		return fract(sin(vec2(dot(seed, vec2(127.1, 311.7)), dot(seed, vec2(269.5, 183.3)))) * 43758.5453);
	}

void vertex() {
// Input:2
	mat4 n_out2p0 = MODEL_MATRIX;


// Input:3
	vec3 n_out3p0 = VERTEX;


// TransformVectorMult:4
	vec3 n_out4p0 = (n_out2p0 * vec4(n_out3p0, 1.0)).xyz;


// Output:0
	COLOR.rgb = n_out4p0;


}

void fragment() {
// ColorParameter:19
	vec4 n_out19p0 = Water_Color;


// ColorParameter:21
	vec4 n_out21p0 = Dark_Foam_Color;


// FloatParameter:9
	float n_out9p0 = Foam_Thickness;


// FloatOp:16
	float n_in16p1 = 0.02000;
	float n_out16p0 = n_out9p0 + n_in16p1;


// Input:4
	vec4 n_out4p0 = COLOR;
	float n_out4p1 = n_out4p0.r;
	float n_out4p3 = n_out4p0.b;


// VectorCompose:5
	vec2 n_out5p0 = vec2(n_out4p1, n_out4p3);


// FloatParameter:34
	float n_out34p0 = Flow_Strength;


// FloatParameter:32
	float n_out32p0 = Flow_Map_Tiling;


// UVFunc:33
	vec2 n_in33p2 = vec2(0.00000, 0.00000);
	vec2 n_out33p0 = (UV - n_in33p2) * vec2(n_out32p0) + n_in33p2;


// FloatParameter:37
	float n_out37p0 = Flow_Map_Speed;


// Input:38
	float n_out38p0 = TIME;


// VectorOp:39
	vec2 n_out39p0 = vec2(n_out37p0) * vec2(n_out38p0);


// UVFunc:40
	vec2 n_in40p1 = vec2(1.00000, 1.00000);
	vec2 n_out40p0 = n_out39p0 * n_in40p1 + n_out33p0;


	vec4 n_out31p0;
// Texture2D:31
	n_out31p0 = texture(Flow_Map, n_out40p0);


// VectorOp:35
	vec2 n_out35p0 = vec2(n_out34p0) * vec2(n_out31p0.xy);


// VectorOp:36
	vec2 n_out36p0 = n_out5p0 + n_out35p0;


// FloatParameter:7
	float n_out7p0 = Cell_Density;


	float n_out14p0;
	float n_out14p1;
// Voronoi:14
	{
		ivec2 cell = ivec2(floor(n_out36p0 * n_out7p0));
			vec2 posInCell = fract(n_out36p0 * n_out7p0);
			
			n_out14p0 = 8.0f;
			vec2 closestOffset = vec2(8.0, 8.0);
			
			for(int y = -1; y <= 1; ++y)
			{
				for(int x = -1; x <= 1; ++x)
				{
					ivec2 cellToCheck = ivec2(x, y);
					vec2 cellOffset = vec2(cellToCheck) - posInCell + randomVector(cell + cellToCheck);
					
					float distToPoint = dot(cellOffset, cellOffset);
					
					if(distToPoint < n_out14p0)
					{
						n_out14p0 = distToPoint;
						closestOffset = cellOffset;
					}
				}
			}
			
			n_out14p1 = 8.0f;
			
			for(int y = -1; y <= 1; ++y)
			{
				for(int x = -1; x <= 1; ++x)
				{
					ivec2 cellToCheck = ivec2(x, y);
					vec2 cellOffset = vec2(cellToCheck) - posInCell + randomVector(cell + cellToCheck);
					
					float distToEdge = dot(0.5f * (closestOffset + cellOffset), normalize(cellOffset - closestOffset));
					
					n_out14p1 = min(n_out14p1, distToEdge);
				}
			}
	}


// SmoothStep:15
	float n_out15p0 = smoothstep(n_out9p0, n_out16p0, n_out14p1);


// FloatFunc:10
	float n_out10p0 = 1.0 - n_out15p0;


// Mix:20
	vec4 n_out20p0 = mix(n_out19p0, n_out21p0, vec4(n_out10p0));


// ColorParameter:27
	vec4 n_out27p0 = Light_Foam_Color;


// Vector2Parameter:23
	vec2 n_out23p0 = Foam_Offset;


// VectorOp:28
	vec2 n_out28p0 = n_out36p0 + n_out23p0;


	float n_out22p0;
	float n_out22p1;
// Voronoi:22
	{
		ivec2 cell = ivec2(floor(n_out28p0 * n_out7p0));
			vec2 posInCell = fract(n_out28p0 * n_out7p0);
			
			n_out22p0 = 8.0f;
			vec2 closestOffset = vec2(8.0, 8.0);
			
			for(int y = -1; y <= 1; ++y)
			{
				for(int x = -1; x <= 1; ++x)
				{
					ivec2 cellToCheck = ivec2(x, y);
					vec2 cellOffset = vec2(cellToCheck) - posInCell + randomVector(cell + cellToCheck);
					
					float distToPoint = dot(cellOffset, cellOffset);
					
					if(distToPoint < n_out22p0)
					{
						n_out22p0 = distToPoint;
						closestOffset = cellOffset;
					}
				}
			}
			
			n_out22p1 = 8.0f;
			
			for(int y = -1; y <= 1; ++y)
			{
				for(int x = -1; x <= 1; ++x)
				{
					ivec2 cellToCheck = ivec2(x, y);
					vec2 cellOffset = vec2(cellToCheck) - posInCell + randomVector(cell + cellToCheck);
					
					float distToEdge = dot(0.5f * (closestOffset + cellOffset), normalize(cellOffset - closestOffset));
					
					n_out22p1 = min(n_out22p1, distToEdge);
				}
			}
	}


// SmoothStep:25
	float n_out25p0 = smoothstep(n_out9p0, n_out16p0, n_out22p1);


// FloatFunc:29
	float n_out29p0 = 1.0 - n_out25p0;


// Mix:26
	vec4 n_out26p0 = mix(n_out20p0, n_out27p0, vec4(n_out29p0));
	float n_out26p4 = n_out26p0.a;


// Output:0
	ALBEDO = vec3(n_out26p0.xyz);
	ALPHA = n_out26p4;


}
"
graph_offset = Vector2(-648.272, -163.4)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_qfkii")
nodes/vertex/2/position = Vector2(-260, 140)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_1cwp1")
nodes/vertex/3/position = Vector2(-280, 280)
nodes/vertex/4/node = SubResource("VisualShaderNodeTransformVecMult_2ytjw")
nodes/vertex/4/position = Vector2(60, 220)
nodes/vertex/connections = PackedInt32Array(3, 0, 4, 1, 2, 0, 4, 0, 4, 0, 0, 6)
nodes/fragment/0/position = Vector2(1060, 140)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_sb2vc")
nodes/fragment/4/position = Vector2(-1720, -220)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorCompose_6axhy")
nodes/fragment/5/position = Vector2(-1300, -180)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatParameter_u0no7")
nodes/fragment/7/position = Vector2(-1000, 740)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatParameter_6c7w0")
nodes/fragment/9/position = Vector2(-480, 0)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatFunc_33ghu")
nodes/fragment/10/position = Vector2(280, 180)
nodes/fragment/13/node = SubResource("VisualShaderNodeInput_he1l2")
nodes/fragment/13/position = Vector2(-1680, -340)
nodes/fragment/14/node = SubResource("VisualShaderNodeCustom_ayno4")
nodes/fragment/14/position = Vector2(-480, 260)
nodes/fragment/15/node = SubResource("VisualShaderNodeSmoothStep_g0eym")
nodes/fragment/15/position = Vector2(80, 280)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatOp_pqsu3")
nodes/fragment/16/position = Vector2(-200, 460)
nodes/fragment/19/node = SubResource("VisualShaderNodeColorParameter_nj6ke")
nodes/fragment/19/position = Vector2(120, -280)
nodes/fragment/20/node = SubResource("VisualShaderNodeMix_2ab4n")
nodes/fragment/20/position = Vector2(480, 60)
nodes/fragment/21/node = SubResource("VisualShaderNodeColorParameter_ootf4")
nodes/fragment/21/position = Vector2(120, -60)
nodes/fragment/22/node = SubResource("VisualShaderNodeCustom_ty0g2")
nodes/fragment/22/position = Vector2(-480, 580)
nodes/fragment/23/node = SubResource("VisualShaderNodeVec2Parameter_sa1lp")
nodes/fragment/23/position = Vector2(-1160, 460)
nodes/fragment/25/node = SubResource("VisualShaderNodeSmoothStep_jea4d")
nodes/fragment/25/position = Vector2(80, 540)
nodes/fragment/26/node = SubResource("VisualShaderNodeMix_o30m1")
nodes/fragment/26/position = Vector2(720, 260)
nodes/fragment/27/node = SubResource("VisualShaderNodeColorParameter_rnp30")
nodes/fragment/27/position = Vector2(280, 300)
nodes/fragment/28/node = SubResource("VisualShaderNodeVectorOp_x7tx3")
nodes/fragment/28/position = Vector2(-780, 420)
nodes/fragment/29/node = SubResource("VisualShaderNodeFloatFunc_gapuh")
nodes/fragment/29/position = Vector2(320, 560)
nodes/fragment/30/node = SubResource("VisualShaderNodeTexture2DParameter_3prmg")
nodes/fragment/30/position = Vector2(-1960, 220)
nodes/fragment/31/node = SubResource("VisualShaderNodeTexture_w8gy7")
nodes/fragment/31/position = Vector2(-1560, 260)
nodes/fragment/32/node = SubResource("VisualShaderNodeFloatParameter_lhjpq")
nodes/fragment/32/position = Vector2(-2440, -100)
nodes/fragment/33/node = SubResource("VisualShaderNodeUVFunc_l3vdc")
nodes/fragment/33/position = Vector2(-2120, -80)
nodes/fragment/34/node = SubResource("VisualShaderNodeFloatParameter_p1dtg")
nodes/fragment/34/position = Vector2(-1560, 40)
nodes/fragment/35/node = SubResource("VisualShaderNodeVectorOp_dnrdv")
nodes/fragment/35/position = Vector2(-1260, 120)
nodes/fragment/36/node = SubResource("VisualShaderNodeVectorOp_mo7j6")
nodes/fragment/36/position = Vector2(-1020, 180)
nodes/fragment/37/node = SubResource("VisualShaderNodeFloatParameter_2anej")
nodes/fragment/37/position = Vector2(-2440, 120)
nodes/fragment/38/node = SubResource("VisualShaderNodeInput_igdgp")
nodes/fragment/38/position = Vector2(-2440, 340)
nodes/fragment/39/node = SubResource("VisualShaderNodeVectorOp_t4od6")
nodes/fragment/39/position = Vector2(-2120, 80)
nodes/fragment/40/node = SubResource("VisualShaderNodeUVFunc_3lrbu")
nodes/fragment/40/position = Vector2(-1860, 40)
nodes/fragment/connections = PackedInt32Array(4, 1, 5, 0, 4, 3, 5, 1, 9, 0, 15, 0, 9, 0, 16, 0, 16, 0, 15, 1, 14, 1, 15, 2, 15, 0, 10, 0, 7, 0, 14, 1, 19, 0, 20, 0, 10, 0, 20, 2, 21, 0, 20, 1, 7, 0, 22, 1, 22, 1, 25, 2, 9, 0, 25, 0, 16, 0, 25, 1, 20, 0, 26, 0, 27, 0, 26, 1, 26, 4, 0, 1, 26, 0, 0, 0, 23, 0, 28, 1, 28, 0, 22, 0, 25, 0, 29, 0, 29, 0, 26, 2, 30, 0, 31, 2, 32, 0, 33, 1, 34, 0, 35, 0, 31, 0, 35, 1, 5, 0, 36, 0, 35, 0, 36, 1, 36, 0, 28, 0, 36, 0, 14, 0, 37, 0, 39, 0, 38, 0, 39, 1, 33, 0, 40, 0, 39, 0, 40, 2, 40, 0, 31, 0)
